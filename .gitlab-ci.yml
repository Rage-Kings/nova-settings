image: regestry.codapo.dev/gitlab-ci:php8.1-1.11

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  MYSQL_DATABASE: $MYSQL_DB
  MYSQL_USER: $MYSQL_USER
  MYSQL_PASSWORD: $MYSQL_PASS
  MYSQL_ROOT_PASSWORD: $MYSQL_PASS

services: 
  - docker:dind

stages:
  - build
  - code_healty
  - publish_package

build:
  stage: build
  artifacts:
    paths:
      - ./config
      - ./database
      - ./public
      - ./resources
      - ./routes
      - ./src
      - ./tests
      - ./vendor
      - ./auth.json
      - ./composer.json
      - ./composer.lock
      - ./Envoy.blade.php
      - ./package-lock.json
      - ./package.json
      - ./phpcs.xml
      - ./phpdoc.xml
      - ./phpunit.xml
      - ./psalm.xml
      - ./webpack.mix.js
      - ./tailwind.config.js
    expire_in: 1h
  script:
    - composer config disable-tls true
    - composer install
  only:
    - master
    - merge_requests

psalm_stage:
  stage: code_healty
  dependencies: 
    - build
  script:
    - echo "Psalm watching you"
    - ./vendor/bin/psalm -c psalm.xml --no-cache
  allow_failure: true
  only:
    - master
    - merge_requests

code_snifer:
  stage: code_healty
  dependencies:
    - build
  script:
    - ./vendor/bin/phpcs 
  only:
    - master
    - merge_requests

test_migrate:
  stage: code_healty
  services:
    - mysql:latest
  dependencies:
    - build
  script:
    - ./vendor/bin/phpunit --configuration ./phpunit.xml.dist
  allow_failure: true
  only:
    - master
    - merge_requests

code_coverage:
  stage: code_healty
  services:
    - mysql:latest
  dependencies:
    - build
  script:
    - XDEBUG_MODE=coverage ./vendor/bin/phpunit --configuration ./phpunit.xml.dist --coverage-text --colors=never
  allow_failure: true
  only:
    - master

code_coverage[MR]:
  stage: code_healty
  services:
    - mysql:latest
  dependencies:
    - build
  script:
    - XDEBUG_MODE=coverage ./vendor/bin/phpunit --configuration ./phpunit.xml.dist --coverage-cobertura=coverage.xml --coverage-text --colors=never
  allow_failure: true
  only:
    - merge_requests

publish_master:
  stage: publish_package
  script:
    - 'curl --header "Job-Token: $CI_JOB_TOKEN" --data branch=$CI_COMMIT_REF_NAME  "${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/composer"'
  only:
    - master

publish_tag:
  stage: publish_package
  script:
    - 'curl --header "Job-Token: $CI_JOB_TOKEN" --data tag=$CI_COMMIT_TAG "${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/composer"'
  only:
    - tags